<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Devtron Labs tutorial</title>
    <link>https://www.niveshopstree.tk/</link>
    <description>Recent content in Introduction on Devtron Labs tutorial</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://www.niveshopstree.tk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deploying mySQL Helm chart</title>
      <link>https://www.niveshopstree.tk/docs/reference/deploy-chart/examples/deploying-mysql-helm-chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/deploy-chart/examples/deploying-mysql-helm-chart/</guid>
      <description>Deploying mySQL Helm chart Introduction stable/mysql Helm chart bootstraps a single node MySQL deployment on a Kubernetes cluster using the Helm package manager.
  1. Discover the chart from the Chart Store Select the Charts section from the left pane, you will be landed to the Chart Store page. Click on Discover and find stable/mongodb-replicaset Helm Chart.
  2. Configure the Chart After selecting the stable/mySQL Helm chart, click on Deploy</description>
    </item>
    
    <item>
      <title>Git Material</title>
      <link>https://www.niveshopstree.tk/docs/reference/creating-application/git-material/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/creating-application/git-material/</guid>
      <description>Git Material Git material is used to pull the application source code during the CI step. Inside git material when you click on “Add material” you will see three options as shown below:
  Select Provider
  Git Repo URL
  Checkout Path
   Devtron also supports multiple git repositories in a single deployment. We will discuss this in detail in the multi git option below.</description>
    </item>
    
    <item>
      <title>Triggering CI</title>
      <link>https://www.niveshopstree.tk/docs/reference/deploying-applications/triggering-ci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/deploying-applications/triggering-ci/</guid>
      <description>Triggering CI Pipelines   The CI Pipeline can be triggered by selecting Select Material
CI Pipelines that are set as Automatic are always triggered as soon as a new commit is made to the git branch they&amp;rsquo;re sensing. However, CI Pipelines can always be manually triggered as and if required.
  Various commits done in the repository can be seen, here along with details like Author, Date etc. Select the commit that you want to trigger and then select &amp;ldquo;Start Build&amp;rdquo; to trigger the CI Pipeline.</description>
    </item>
    
    <item>
      <title>Deploying MongoDB Helm chart</title>
      <link>https://www.niveshopstree.tk/docs/reference/deploy-chart/examples/deploying-mongodb-helm-chart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/deploy-chart/examples/deploying-mongodb-helm-chart/</guid>
      <description>Deploying mongoDB Helm chart Introduction Let&amp;rsquo;s assume that you are building an application which needs mongoDB.
 Deploying applications as Helm Charts is the easiest way to create applications on Devtron.
This guide will introduce you to how to deploy the mongoDB&amp;rsquo;s Helm chart.
1. Discover the Chart from the Chart Store Select the Charts section from the left pane, you will be landed to the Chart Store page. Click on Discover and find stable/mongodb-replicaset Helm Chart.</description>
    </item>
    
    <item>
      <title>Docker Configuration</title>
      <link>https://www.niveshopstree.tk/docs/reference/creating-application/docker-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/creating-application/docker-configuration/</guid>
      <description>Docker build Configuration In the previous step, we discussed git configurations. In this section, we will provide information on the docker build config.
Docker build configuration is used to create and push docker images in the docker registry for your application. You will provide docker related information to build and push docker images in this step.
Only one docker image can be created even for multi-git repository application as explained in the previous step.</description>
    </item>
    
    <item>
      <title>Overview of Charts</title>
      <link>https://www.niveshopstree.tk/docs/reference/deploy-chart/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/deploy-chart/overview/</guid>
      <description>Deploying Charts Charts can be deployed individually or by creating a group of Charts.
Both methods are mentioned in the given document.
Deploying Chart   Select Discover and then select the chart that you want to use
Click on README.MD to get more idea about the configurations of the chart
Select the Chart Version that you want to use and Chart Value, you can either use the default Values or custom values.</description>
    </item>
    
    <item>
      <title>Triggering CD</title>
      <link>https://www.niveshopstree.tk/docs/reference/deploying-applications/triggering-cd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/deploying-applications/triggering-cd/</guid>
      <description>Triggering CD Pipelines   After CI Pipeline is complete, CD Pipeline can be triggered by Clicking on Select Image.
  Select an image to deploy and then Click on Deploy to trigger the CD Pipeline.
The running images are tagged as Running
  The status of the current deployment can be viewed by Clicking on App Details that will show the Progressing state for 1-2 minutes and then gradually shows Healthy state or Hibernating state, based on the deployment strategy.</description>
    </item>
    
    <item>
      <title>Deployment Template</title>
      <link>https://www.niveshopstree.tk/docs/reference/creating-application/deployment-template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/reference/creating-application/deployment-template/</guid>
      <description>Deployment Configurations Deployment configuration is the Manifest for the application, it defines the runtime behavior of the application. You can define application behavior by providing information in three sections:
  Chart Version
  Yaml file
  Show application metrics
    1. Chart version    Key Descriptions     Chart Version Select the Chart Version using which you want to deploy the application.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.niveshopstree.tk/docs/hidden/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.niveshopstree.tk/docs/hidden/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
